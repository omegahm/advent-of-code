tiles = File.read('day20.input').split("\n\n")

tiles_hash = tiles.map { |tile| [tile.scan(/Tile (\d+)/)[0][0].to_i, tile.split("\n")[1..].join("\n")] }.to_h

def borders(tile)
  rows = tile.split("\n")
  n = rows[0]
  e = rows.map { |r| r[-1] }.join
  s = rows[-1]
  w = rows.map { |r| r[0] }.join
  [n, e, s, w]
end

corners = tiles_hash.select do |id, tile|
  borders(tile).select do |border|
    tiles_hash.any? do |other_id, other_tile|
      if id == other_id
        false
      else
        borders(other_tile).any? do |other_border|
          border == other_border || border == other_border.reverse
        end
      end
    end
  end.size == 2
end

puts corners.keys.reduce(:*)


###
###
###

tiles = File.read('day20.example').split("\n\n").each_with_object({}) do |s, tile_hash|
  lines = s.lines.map(&:chomp)
  tile_hash[lines.first[/\d+/].to_i] = lines[1..].map(&:chars)
end
$dim = Math.sqrt(tiles.length).to_i

def coords(pos)
  [pos / $dim, pos % $dim]
end

def solve(tiles, board, ids, add_id = nil, add_tile = nil)
  # append id & tile to ids/board
  if add_id
    r, c = coords(board.length)
    (ids = ids.dup)[[ r, c ]] = add_id
    (board = board.dup)[[ r, c ]] = add_tile
  end

  # check N and W
  unless ids.empty?
    r, c = coords(ids.length - 1)
    if n = board[[ r - 1, c ]]
      return if n.last != board[[ r, c ]].first
    end
    if w = board[[ r, c - 1 ]]
      return if w.map(&:last) != board[[ r, c ]].map(&:first)
    end
  end

  # done?
  if board.length == tiles.length
    puts ids[[0, 0]] * ids[[$dim-1, 0]] * ids[[0, $dim-1]] * ids[[$dim-1, $dim-1]]

    # PRINT BOARD
    # (0...$dim).each do |r|
    #   lines = []
    #   (0...$dim).each do |c|
    #     tile = board[[ r, c ]]
    #     tile[1..-2].each.with_index do |line, index|
    #       (lines[index] ||= '') << line[1..-2].join
    #     end
    #   end
    #   puts lines.join("\n")
    # end
    exit
  end

  # place another tile and try to solve
  (tiles.keys - ids.values).each do |id|
    tile = tiles[id].dup.map(&:dup)
    2.times do
      # test
      solve(tiles, board, ids, id, tile)
      # rotate 3 times
      3.times { solve(tiles, board, ids, id, tile = tile.transpose.map(&:reverse)) }
      # flip
      tile = tile.reverse
    end
  end
end

# solve(tiles, {}, {})

MONSTER = <<HERE
                  #
#    ##    ##    ###
 #  #  #  #  #  #
HERE

# EXAMPLE BOARD
# BOARD = <<HERE
# .####...#####..#...###..
# #####..#..#.#.####..#.#.
# .#.#...#.###...#.##.##..
# #.#.##.###.#.##.##.#####
# ..##.###.####..#.####.##
# ...#.#..##.##...#..#..##
# #.##.#..#.#..#..##.#.#..
# .###.##.....#...###.#...
# #.####.#.#....##.#..#.#.
# ##...#..#....#..#...####
# ..#.##...###..#.#####..#
# ....#.##.#.#####....#...
# ..##.##.###.....#.##..#.
# #...#...###..####....##.
# .#.##...#.##.#.#.###...#
# #.###.#..####...##..#...
# #.###...#.##...#.######.
# .###.###.#######..#####.
# ..##.#..#..#.#######.###
# #.#..##.########..#..##.
# #.#####..#.#...##..#....
# #....##..#.#########..##
# #...#.....#..##...###.##
# #..###....##.#...##.##.#
# HERE

# INPUT BOARD
BOARD = <<HERE
#.#...............#.##.#.#...##........#....#................#....#.##.#......#..#.....##.#...#.
.....#......#.....#......#...##....#..#....................####.#.................#.............
......#..##..#.###......................##.#..#....##....##..#.###.##....##..#......###.###..#..
.....#.###.....#.#.....#...###.##.##..#.####...#.##..#####.#..###.#........#............#...##.#
..#...#.#.#.....#.......##.#.###.#..#..#...##.....#....##.......##...#.....##..........#..#.#...
#...#..##.......#............#..###...#.....##........#.#...........#.......###..#....###.....##
..##.#......#...............#.....#.#....##.#..#...........#.#.......#.#..##....##....###..#.#.#
....#...........#.#....#......#.....#....#.........#.....###.#........#.##..##.#..#.##...#.#..#.
#..#.#..##.......#..#.##.......###..##.....#.....#...#...#.##....#....#....#.....#.#....#.......
......#.#.....##....##....#..#.###.#....###....##....##.#.####.#.....##.#..###..#....#.#........
#..#......#.....#.####......#..#..##....#..##.#..##.#..#..#..........#.....#.......#..##.....#..
........###...#......#....#.....#...###.....#.........#..#....#..#.#...........#.#....#..#....##
#.#.........................#.##......##.##...#...##.......#....#.....##.#.....#....#.......##..
#..#......#.#..#......#..##......#...###....#.#........#.#....#.#............#...#...#.......#..
.#...#..#.....###.#...##..#...###....##..#####......#....#.........##.#....##....#.#....##.#....
......##..#..#..........##.#..##.#..##.#..###..#...........#....#......#.#..........##..###..##.
..#..#...........#.#.#.....#.##........#...###.....##........#.....#.##.#...###..#.##....###..#.
.#.#..##....##..#.####.......#...##.#............#.#.......#.#.#.#.....#.#..#..#.##.##..#..#....
..#..#..#..#..#..##.....#..#..#.#...#.......##....##...#.#.##...#.........#..##.....#.....#.....
.#......##.......#......##.#..#..........###...##.#.###....###.....#..#.###..#..............#...
#......#..##....#.........##..##..###.#..#.#..#..#..#..#..#.........#...#...#....###...#...#...#
#..........##.####.........#.#...#..#..........#..........##.....#..##.#.....##..........#......
..#........#......##..#..#......#.#....####.#.........................#................#........
.#.#..###.####.#..###.#.......#.#....##.#..#......#.......#...#.##...##...##....##...####..#....
..#..#..#####.#.##..#.#...#.....#..........##....##....##.#.####.#.#..#..##.#..##.#.##....#.##..
##.#..####.###..#.#..##........#.............##.##.#..#..#..#...#....#..##.#.#.#...#.....#......
##.....#.##.###.....#........#.......#.........#..###.#....#..........#..#.#...###.........#.#..
......#...##.##.....#.....#..#..#.....#...##..........##...##.##.##.............#.....#..####.#.
....#...##..##.......#.#...#....#..............#....#.#........#...#.#...#..#.###...##....###..#
....#.####.#....#.#..#.#...#..##..##.............#...###..#.##....###.....##.#..#..#..#..#..##.#
..........##.....#.....#...##.............#.#.....#..#..##.#.##..#....#.#...#..#.#.#...#.....##.
......#.....#....#........##....#.#......#....#...#..##.....#.#..#..#......#............##.#....
#..#....##.##..#...#.#.......#........#..........##......#...................#.#.##.#...#..#....
.#...###...###..#.###.#....#.....#..#.......###.#...#..#....#..#..#..#...##..........##..#####.#
.##.##.##..#..##.#..#........#....#.#....#.......#.#.#..##....###...###..#.#.#.#.......#........
#.........#.##....##.......#.#....#....#.#.....#.####..#..#..#..##.#...#..#.#.....#.#..#.#....##
..#...#.#....###..#....#..#...##...........###...#.....###...#..###.#....#...................#..
....#......#...#....#........#...##...##...#..#...........#...#....#........####.............#..
.............##..#..............##.##.#..#.....#..#.......#...##.....#..........#....#...#.#..##
.........#..###.#....###.......###...............#..............#.##....##......##......#.#..#..
..#.#.###............#..#..##...#....#...........#..####....##.#..####..#........#.....#.#...#.#
.#.#..###........#.###.##.#.#..........#...##.....##.#..#..#..#.##....#...........##...........#
......#....##...........#...#....#...........#...##......#...#..#.#.##...#...........#.#.#....#.
.#..##.#......##...#...##..##...#...#......##..#...........##.....#...#......#.#.....##.#....#.#
#....##...##....##..#.###...#.#...##......#.#.......#..#...##.#######.##..#.###.................
..##..#..##.#..#..#..#.##.###..#.....#......#..##.....#..#..##.#..#..#..#..#..#....#........#...
#....#...#....#..#.....................#.#..#.......#.......#......##............##.........###.
#.......###....#.....#..##.##....#..#....#.#.#......#..#..#......#.#......#..#.......##.......#.
#......#........#.....#.#...##.#....#..........#.....#...#.#..#..#.........###...#..#...........
.....#....#.....####...##.#####.#..###.#....#...###....###..####..##....#..#....#.#.............
#...............#..##.##.#.##..##.##.........##.#.##..#.##..#...#.#.............#.#.#..#........
.#...........#...#.....#.##....#...#.....#....#..#........#....####..#...#.......#....###.......
..###....#...###...#...#..#...#............#...........#...............#...#...#.#....#..###....
#.....###........###......#..........##....#.......#.............##....#....##..........#....#.#
........#......#..#...#..#...........#.#.#........##.............#....##...##....###...###.##...
......##..#..#.##....#.........................#.....#......##.#.......#.##.#####..#..#.........
......#.###.#........#......##....................#..##....#.###.##.##.#............#....#......
...#....###..###...######...#.....##...###...#................###....##.........#.....#.#.......
....#.###.#.##.##.##.#......#...........#...#......#........##...#......#....#..#......#.....##.
...#..#.....#.#...#.#...##.....#.#.#....#.##...#.#....###..##..#.##..#######.....#.#.......#..#.
..##...#.....#.....#....###..##......##..#.#.......#...#..#..##.#.###.#........#.#.....#......##
##.##..##..#.#...#.#...#.....#.#..##.#....##....##...#...#........#.........#...#.#....#......#.
..#......#.#...........#.##..................##.....##...##........#.......#...#........##......
#......##.....##.#......#............#.#......#..#....###.#........##....#..#..............#....
..#..#...#...#......#..........#...#....#..#.##....##...####.....#...##.#....#..#.....#....#...#
...#.......#............#..#......#......#..#..#..##.####..........#...#...###..#.....##..#.#...
...#.....#..#.##.#..###...####..#.#.........#.#..................#......#.#...........#..#......
..##......#..##.#.##..#..#....#.#....................#....##..##.......##...###...##....###....#
##........###...#.##......#...#......#.#....#....#...##........#..####..##.#..#..#.##..###.....#
......#..##..#..........###.#...#.#.##....#.#.....#.......##.....#.#.#.....#.#...#.#...........#
.#..#...................##...####..####.####....#..#..#.#...#..#.....##...###........#....#..#.#
........##.##.#....#.....#..#..#..####..#.............#....#..........#....#......#.##..........
.#...#....#........#..........#..#.#...#...#........#.............###....##...#.#..#.#.#........
.##.#.##....##.#.######....#.......#.##.#.##.........#...#.....#.##...##.#..##....###......###..
..#.##..#.##..#..###.#.......##.....#...#.##.#....#.......##......#..#..#..##.#..#..........#..#
#...#.........#.#....#........##...#.#........#............#...........##....##...#...#.#....###
#...#.#....#....#..#...#..#.#.....#.....#.###...#......#......##...#....#....#...#....#.....#...
.........##.........#....#....##.#..##....####....#....#.......##.....#.#....##...#.....#...#.#.
.......#..##...##.........#..##.##.#.##..#.#.................##....##..#.##...........#...#....#
..#......#.....#.#..#....##..#.#..##.#......#.......#...........###..#....#......##.#.......#...
.#......#.......###...#..##....#.#...#.#.....#..####....##....##.#..####...##.....#.##..........
..#.##.......#....#...###..#..###..#.#....#....#....#..#..##.##.##.#....#..#.#......#.....#.#..#
....#.#.##.#.........#......#....#........##..#................#.#.#..#...............##..#....#
.#.##..#..#....##....##...#####...#....#..#........##......#..#...#.#.#.........#.#.....###..#..
.........#.#..#..#..#..####..#.....#..#......###................#.......#..#.##....##..##...##..
#.....##.....#..###........##.......##.##..###....#.#....#.......#.#.##..#..#.#....#.#.#.#.....#
........#...##.................#...#.......#......##...##.......#....#.##.........#.......###.##
.#...........#.......##.#...#..#.##..#.#..##.#..##..#.###..........#.#......#...##..#......#.#..
#.##.#......#.#.#.....##.#.##..##.#...##.##.#..##.#..#.........#......#.#.....#.#....#...#.##..#
................#.#..........#...#....#......#........#.#...#..#.....#.......##......#..#.......
#.#.#..##...#....#..#.#...#.....#.......#...........#........#.##.........#...#.#...#...#..##.##
.....##.#.#..#..#......#..........###.#....#.....##..#....#.#..##.......#...#..##..#..#........#
.##....#.#.#..##.#...#...#....#.##.#....##....##..#.###..#..###...##...###..#.###...##....#.....
#...#........#...#.....#...#.##..####..#..#..#..#.##...#......#.##..##.####..####....#...#......
......#............#..##.....#.##.....#......#...#..#...#.......#####.#..#..#...#..#........#...
.......#.....##....###.##.#...#......#.........##............#..##....#..#.......#..#..#.#......
HERE

data = BOARD.lines.map(&:chars)
monster = MONSTER.lines.map(&:chars)

def check(data, monster)
  match = false
  (0...data.length - monster.length).each do |r|
    (0...data.first.length).each do |c|
      # is there a monster here?
      copy = data.map(&:dup)
      n = 0
      (0...monster.length).each do |r2|
        (0...monster.first.length).each do |c2|
          if monster[r2][c2] == '#' && copy[r + r2][c + c2] == '#'
            copy[r + r2][c + c2] = 'O'
            n += 1
          end
        end
      end

      # if we found a monster, make sure we use the new state from here on out
      if n == 15
        match = true
        data = copy
      end
    end
  end

  if match
    p data.map(&:join).join.chars.count { |i| i == '#' }
    exit
  end
end

2.times do
  # original
  check(data, monster)
  # rotate 3 times
  3.times { check(data = data.transpose.map(&:reverse), monster) }
  # flip
  data = data.reverse
end
